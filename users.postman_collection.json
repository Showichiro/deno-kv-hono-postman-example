{
  "info": {
    "_postman_id": "4312cd5a-c873-478f-b1fc-12841eccaa6f",
    "name": "users",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "27609378"
  },
  "item": [
    {
      "name": "findAllUsers",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const schema = {\r",
              "    type: \"array\",\r",
              "    items: {\r",
              "        type: \"object\",\r",
              "        properties: {\r",
              "            name: {\r",
              "                type: \"string\"\r",
              "            },\r",
              "            id: {\r",
              "                type: \"number\"\r",
              "            },\r",
              "            age: {\r",
              "                type: \"number\"\r",
              "            }\r",
              "        },\r",
              "        required: [\"id\", \"name\", \"age\"]\r",
              "    }\r",
              "}\r",
              "\r",
              "pm.test(\"Validate schema\", () => {\r",
              "    pm.response.to.have.jsonSchema(schema);\r",
              "});\r",
              "pm.test(\"Validate Response Status\", () => {\r",
              "    pm.response.to.have.status(200);\r",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/users",
          "host": ["{{base_url}}"],
          "path": ["users"]
        }
      },
      "response": []
    },
    {
      "name": "findUserById",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const schema = {\r",
              "    type: \"object\",\r",
              "    properties: {\r",
              "        name: {\r",
              "            type: \"string\"\r",
              "        },\r",
              "        id: {\r",
              "            type: \"string\"\r",
              "        },\r",
              "        age: {\r",
              "            type: \"number\"\r",
              "        }\r",
              "    },\r",
              "    required: [\"id\", \"name\", \"age\"]\r",
              "}\r",
              "\r",
              "pm.test(\"Validate schema\", () => {\r",
              "    pm.response.to.have.jsonSchema(schema);\r",
              "});\r",
              "pm.test(\"Validate Response Status\", () => {\r",
              "    pm.response.to.have.status(200);\r",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/users/01HE0YTZPW96CFKD61NG9E7MA3",
          "host": ["{{base_url}}"],
          "path": ["users", "01HE0YTZPW96CFKD61NG9E7MA3"]
        }
      },
      "response": []
    },
    {
      "name": "createUser",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const schema = {\r",
              "    type: \"object\",\r",
              "    properties: {\r",
              "        name: {\r",
              "            type: \"string\"\r",
              "        },\r",
              "        id: {\r",
              "            type: \"string\"\r",
              "        },\r",
              "        age: {\r",
              "            type: \"number\"\r",
              "        }\r",
              "    },\r",
              "    required: [\"id\", \"name\", \"age\"]\r",
              "}\r",
              "\r",
              "pm.test(\"Validate schema\", () => {\r",
              "    pm.response.to.have.jsonSchema(schema);\r",
              "});\r",
              "pm.test(\"Validate Response Status\", () => {\r",
              "    pm.response.to.have.status(201);\r",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"Hayes\",\r\n    \"age\": 30\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/users",
          "host": ["{{base_url}}"],
          "path": ["users"]
        }
      },
      "response": []
    },
    {
      "name": "updateUser",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const schema = {\r",
              "    type: \"null\"\r",
              "}\r",
              "\r",
              "pm.test(\"Validate schema\", () => {\r",
              "    pm.response.to.have.jsonSchema(schema);\r",
              "});\r",
              "pm.test(\"Validate Response Status\", () => {\r",
              "    pm.response.to.have.status(200);\r",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"Adam\",\r\n    \"age\": 12\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/users/1",
          "host": ["{{base_url}}"],
          "path": ["users", "1"]
        }
      },
      "response": []
    },
    {
      "name": "deleteUser",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const schema = {\r",
              "    type: \"null\"\r",
              "}\r",
              "\r",
              "pm.test(\"Validate schema\", () => {\r",
              "    pm.response.to.have.jsonSchema(schema);\r",
              "});\r",
              "pm.test(\"Validate Response Status\", () => {\r",
              "    pm.response.to.have.status(200);\r",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{base_url}}/users/1",
          "host": ["{{base_url}}"],
          "path": ["users", "1"]
        }
      },
      "response": []
    }
  ]
}
